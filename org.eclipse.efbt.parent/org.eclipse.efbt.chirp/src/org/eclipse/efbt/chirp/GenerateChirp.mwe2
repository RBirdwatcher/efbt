module org.eclipse.efbt.chirp.GenerateChirp

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.eclipse.efbt.chirp"
				rootPath = rootPath
				
				eclipsePlugin = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "org.eclipse.efbt.chirp.Chirp"
			fileExtensions = "dsl"
			referencedResource = "platform:/resource/org.eclipse.efbt.chirp/model/chirp.genmodel"
			referencedResource = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
			referencedResource = "platform:/resource/org.eclipse.efbt.common.model.module_management/model/module_management.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			formatter = {
			
				generateXtendStub = false
			}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = {
				generateXtendStub = false
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
		
		
	
	}
	
	component = org.eclipse.emf.mwe2.ecore.EcoreGenerator {
		genModel = "platform:/resource/org.eclipse.efbt.chirp/model/chirp.genmodel"
		srcPath = "platform:/resource/org.eclipse.efbt.chirp/src-gen"
		}
	
	
		}
	
	

