<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:base_column_structured_data="http://www.eclipse.org/base_column_structured_data" xmlns:column_structured_data="http://www.eclipse.org/column_structured_data" xmlns:column_structures="http://www.eclipse.org/column_structures" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:module_management="http://www.eclipse.org/module_management" xmlns:xsd="http://www.w3.org/2001/XMLSchema" ecore:nsPrefix="base_column_structured_data" ecore:package="org.eclipse.efbt.chirp.base_column_structured_data" targetNamespace="http://www.eclipse.org/base_column_structured_data">
  <xsd:import namespace="http://www.eclipse.org/module_management" schemaLocation="module_management.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="Ecore.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/column_structures" schemaLocation="column_structures.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/column_structured_data" schemaLocation="column_structured_data.xsd"/>
  <xsd:annotation>
    <xsd:documentation> This package describes the storage of base cube data (as opposed to derived cube data) 
</xsd:documentation>
  </xsd:annotation>
  <xsd:annotation>
    <xsd:appinfo ecore:key="license" source="license">Copyright (c) 2020 Bird Software Solutions Ltd
 All rights reserved. This file and the accompanying materials are made available under the terms of the Eclipse Public License v2.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v20.html

SPDX-License-Identifier: EPL-2.0 

 Contributors:
 Neil Mackenzie - initial API and implementation&#13;</xsd:appinfo>
  </xsd:annotation>
  <xsd:element ecore:ignore="true" name="BaseCell" type="base_column_structured_data:BaseCell"/>
  <xsd:element ecore:ignore="true" name="BaseCellWithEnumeratedValue" type="base_column_structured_data:BaseCellWithEnumeratedValue"/>
  <xsd:element ecore:ignore="true" name="BaseCellWithValue" type="base_column_structured_data:BaseCellWithValue"/>
  <xsd:element ecore:ignore="true" name="BaseColumnStructuredData" type="base_column_structured_data:BaseColumnStructuredData"/>
  <xsd:element ecore:ignore="true" name="BaseRowData" type="base_column_structured_data:BaseRowData"/>
  <xsd:element ecore:ignore="true" name="InputData" type="base_column_structured_data:InputData"/>
  <xsd:complexType abstract="true" name="BaseCell">
    <xsd:annotation>
      <xsd:documentation>Cell data of Rows of BaseCubes</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="column_structured_data:Cell"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BaseCellWithEnumeratedValue">
    <xsd:annotation>
      <xsd:documentation>Base Cell data which contains one member of a list of enumerated values (e.g. a currency)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="base_column_structured_data:BaseCell">
        <xsd:attribute ecore:reference="column_structures:EnumMember" name="value" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The member</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BaseCellWithValue">
    <xsd:annotation>
      <xsd:documentation>Base Cell data which contains a value (e.g. price)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="base_column_structured_data:BaseCell">
        <xsd:attribute name="value" type="ecore:EString">
          <xsd:annotation>
            <xsd:documentation>The value of the cell represented as a String</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BaseColumnStructuredData">
    <xsd:annotation>
      <xsd:documentation>Data For BaseCubes as a set of RowData</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="column_structured_data:ColumnStructuredData">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="rows" type="base_column_structured_data:BaseRowData">
            <xsd:annotation>
              <xsd:documentation>The rows which make up the table data</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:reference="column_structures:ColumnStructuredEntity" name="cube" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The cube with which the data is associated</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="BaseRowData">
    <xsd:annotation>
      <xsd:documentation>Data For Rows of BaseCubes</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="column_structured_data:RowData">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="cells" type="base_column_structured_data:BaseCell">
            <xsd:annotation>
              <xsd:documentation>The cells containing the data associated with the BaseRows</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="InputData">
    <xsd:sequence>
      <xsd:element ecore:ordered="false" ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="sourceTableData" type="base_column_structured_data:BaseColumnStructuredData">
        <xsd:annotation>
          <xsd:documentation>The set of pupulated BaseCubes that represent the input data.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The name associated with the input data.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="InputDataModule">
    <xsd:annotation>
      <xsd:documentation>A module containeing a set of input data</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="module_management:Module">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="inputData" type="base_column_structured_data:InputData">
            <xsd:annotation>
              <xsd:documentation>The input data that makes up the module</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>
