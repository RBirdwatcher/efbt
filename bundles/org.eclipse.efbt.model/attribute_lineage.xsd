<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:attribute_lineage="http://www.eclipse.org/attribute_lineage" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:functions="http://www.eclipse.org/functions" xmlns:module_management="http://www.eclipse.org/module_management" xmlns:row_transformation_logic="http://www.eclipse.org/row_transformation_logic" xmlns:xsd="http://www.w3.org/2001/XMLSchema" ecore:nsPrefix="attribute_lineage" ecore:package="attribute_lineage" targetNamespace="http://www.eclipse.org/attribute_lineage">
  <xsd:import namespace="http://www.eclipse.org/module_management" schemaLocation="module_management.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="../../org.eclipse.emf.ecore/model/Ecore.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/functions" schemaLocation="functions.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/row_transformation_logic" schemaLocation="row_transformation_logic.xsd"/>
  <xsd:annotation>
    <xsd:documentation> This package describes the concepts related to attribute lineage
 
 </xsd:documentation>
  </xsd:annotation>
  <xsd:annotation>
    <xsd:appinfo ecore:key="license" source="license">Copyright (c) 2020 Bird Software Solutions Ltd
 All rights reserved. This file and the accompanying materials are made available under the terms of the Eclipse Public License v2.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v20.html

SPDX-License-Identifier: EPL-2.0 

 Contributors:
 Neil Mackenzie - initial API and implementation&#13;</xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType name="AttributeLineageModel">
    <xsd:annotation>
      <xsd:documentation>A Program is a set of related rowTransfomrations and BaseSchemas. It provides full traceability, between the columns
    of each rowtransformation and BaseSchema. Every column is either  a column in a base schema or a column which is derived from other columns via a functions. 
    Some required FunctionsSpecs are also included in the program definitions.
    </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="rowTransformations" type="row_transformation_logic:FunctionalRowLogic">
        <xsd:annotation>
          <xsd:documentation>The row transformations</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="baseSchemas" type="row_transformation_logic:BaseRowStructure">
        <xsd:annotation>
          <xsd:documentation>The base schemas</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="specialFunctionSpecs" type="functions:FunctionSpec">
        <xsd:annotation>
          <xsd:documentation>The FunctionSpecs</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute ecore:id="true" name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The name of the AttributeLineageModel</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="AttributeLineageModelModule">
    <xsd:annotation>
      <xsd:documentation>a module of AttributeLineageModels</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="module_management:Module">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="attributeLineageModels" type="attribute_lineage:AttributeLineageModel">
            <xsd:annotation>
              <xsd:documentation>The AttributeLineageModels</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>
