<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:cube_schema="http://www.eclipse.org/cube_schema" xmlns:cubes="http://www.eclipse.org/cubes" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:module_management="http://www.eclipse.org/module_management" xmlns:transformation="http://www.eclipse.org/transformation" xmlns:trl_report_cell_views="http://www.eclipse.org/trl_report_cell_views" xmlns:xsd="http://www.w3.org/2001/XMLSchema" ecore:nsPrefix="transformation" ecore:package="transformation" targetNamespace="http://www.eclipse.org/transformation">
  <xsd:import namespace="http://www.eclipse.org/cube_schema" schemaLocation="cube_schema.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/trl_report_cell_views" schemaLocation="trl_report_cell_views.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/module_management" schemaLocation="module_management.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="../../org.eclipse.emf.ecore/model/Ecore.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/cubes" schemaLocation="cubes.xsd"/>
  <xsd:annotation>
    <xsd:documentation>This package describes DataSetTransformations used to derive DerivedCubes, and the grouping of these DataSetTransformations into Schemes and Modules.
 </xsd:documentation>
  </xsd:annotation>
  <xsd:annotation>
    <xsd:appinfo ecore:key="license" source="license">Copyright (c) 2020 Bird Software Solutions Ltd
 All rights reserved. This file and the accompanying materials are made available under the terms of the Eclipse Public License v2.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-v20.html

SPDX-License-Identifier: EPL-2.0 

 Contributors:
 Neil Mackenzie - initial API and implementation&#13;</xsd:appinfo>
  </xsd:annotation>
  <xsd:complexType name="DataSetTransformation">
    <xsd:annotation>
      <xsd:documentation>A DataSetTransformations is used to derive DerivedCubes. 
The DataSetTransformation links the DerivedCube to the logic which is used to derive the cubes structure from the structure of its source cubes, and to derive its data from populated source cubes.
Note that the DataSetTransformations has many subsclasses, currently they represent structures from the TraceableReportingLanguage (TRL), and soon these will be replaced by subclasses which represent structures from VTL.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:reference="cubes:DerivedCube" name="cube" type="xsd:anyURI">
      <xsd:annotation>
        <xsd:documentation>The DerivedCube associated with this DataSetTransformation</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:id="true" name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The name of this DataSetTransformation</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="DataSetTransformationTransformationScheme">
    <xsd:annotation>
      <xsd:documentation>A DataSetTransformationTransformationScheme is a set of releted DataSetTransformations.
Usually they will be groups where the derived cube associated with DataSetTransformation, has source cubes which are associated with other DataSetTransformations in the same group.
</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="transformation:TransformationScheme"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ReadDataSourceTransformationScheme">
    <xsd:annotation>
      <xsd:documentation>A TransformationScheme which represents the reading in data from base cubes. Note that the BIRD input layer is made up of BaseCubes.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="transformation:TransformationScheme"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="Release">
    <xsd:annotation>
      <xsd:documentation>a VersionedComponentSet which represents a final release.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="transformation:VersionedComponentsSet">
        <xsd:attribute name="version" type="ecore:EString">
          <xsd:annotation>
            <xsd:documentation>The version number associated with the release.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ReportCellCreationTransformationScheme">
    <xsd:annotation>
      <xsd:documentation>A TransformationScheme which represents the calculation of report cells.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="transformation:TransformationScheme"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="TransformationScheme">
    <xsd:annotation>
      <xsd:documentation>TransformationScheme is the super class of ReportCellTransformationScheme,ReadDataSourceTransformationScheme, and DataSetTransformationTransformationScheme.
It represents a set of processing.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:id="true" name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The name of the TransformationScheme</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="TransformationSchemeModule">
    <xsd:annotation>
      <xsd:documentation>A module of TransformationSchemes</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="module_management:Module">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="transformationSchemes" type="transformation:TransformationScheme">
            <xsd:annotation>
              <xsd:documentation>The  set of TransformationSchemes </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="VersionedComponentsSet">
    <xsd:annotation>
      <xsd:documentation>VersionedComponentsSet contains all the information required to translate a TransformationScheme and its dependent TransformationSchemes into an AttributeLineageModel
It is this component set that contains the cub scehma structures ,and the actual DataSetTransformations.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ecore:reference="transformation:VersionedCubeSchemaModule" name="cubeSchemaModules">
      <xsd:annotation>
        <xsd:documentation>The set of VersionedCubeSchemaModules. Note that VersionedCubeSchemaModules state which ReadDataTransformationScheme they are associated with in the transformationScheme reference.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:list itemType="xsd:anyURI"/>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute ecore:reference="transformation:VersionedTransformationSchemeLogic" name="datasetTransformationModules">
      <xsd:annotation>
        <xsd:documentation>The set of DataSetTransformationModules, note that each DataSetTransformationModule states which  DataSetTransformationTransformationScheme they are associated with in the transformationScheme reference.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:list itemType="xsd:anyURI"/>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute ecore:id="true" name="name" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The name of the VersionedComponentSet</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ecore:reference="trl_report_cell_views:ReportCellViewModule" name="reportCellViewModules">
      <xsd:annotation>
        <xsd:documentation>The set of ReportCellViewModules, note that each ReportCellViewModule states which  ReportCellCreationTransformationScheme they are associated with in the transformationScheme reference.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:list itemType="xsd:anyURI"/>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="license" type="ecore:EString">
      <xsd:annotation>
        <xsd:documentation>The license under which this VersionedComponentSet is distributed</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="VersionedCubeSchemaModule">
    <xsd:annotation>
      <xsd:documentation>A module of VersionedCubeSchemas</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="module_management:Module">
        <xsd:sequence>
          <xsd:element ecore:resolveProxies="true" maxOccurs="unbounded" minOccurs="0" name="schemas" type="cube_schema:CubeSchema">
            <xsd:annotation>
              <xsd:documentation>The schemas in the module</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute ecore:reference="transformation:ReadDataSourceTransformationScheme" name="transformationScheme" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The ReadDataSourceTransformationScheme with which this module is associated.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="VersionedTransformationSchemeLogic">
    <xsd:annotation>
      <xsd:documentation> A Module containing a set of DataSetTransformations </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="module_management:Module">
        <xsd:attribute ecore:name="transformationScheme" ecore:reference="transformation:DataSetTransformationTransformationScheme" name="transformation" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The DataSetTransformationTransformationScheme with which this module is associated.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>
